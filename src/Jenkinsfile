pipeline {
    agent any
    environment {
        JAVA_HOME = "${tool 'jdk'}" // Замените 'Your_JDK_Tool_Name' на имя JDK в настройках Jenkins
        PATH = "${JAVA_HOME}/bin:${PATH}" // Обновление переменной PATH для включения пути к bin директории JDK
        BROWSER_OPTIONS = 'browserType=chromium;width=1366;height=768;headless=true;slowMo=0;tracing=true;video=true'
        WEB_OPTIONS = "username=pw.new.test.23+20@gmail.com;password=RFbf916!)!;baseUrl=${env.BASE_URL};commonEmailPart=${env.COMMON_EMAIL_PART};apiBaseUrl=${env.API_BASE_URL};adminUsername=${env.ADMIN_USERNAME};adminPassword=${env.ADMIN_PASSWORD}"
    }
    tools {
            jdk 'jdk'
        }

    stages {
        stage('Checkout') {
            steps {
                // Шаг клонирования репозитория
                git branch: 'main', url: 'https://github.com/YuliaMatusevich/DragonJurJenkinsRun'
            }
        }
//          stage('Set JDK') {
//              steps {
//                  script {
//                      // Установка JAVA_HOME в соответствии с JDK, доступной в Jenkins
//                      env.JAVA_HOME = tool 'jdk'
//                  }
//              }
//          }

//         stage('Install JDK') {
//                     steps {
//                         // Скачиваем и устанавливаем JDK для Windows
//                         bat 'curl -LO https://download.java.net/java/early_access/jdk17/15/GPL/openjdk-17-ea+15_windows-x64_bin.zip'
//                         bat 'Expand-Archive -Path ./openjdk-17-ea+15_windows-x64_bin.zip -DestinationPath %JDK_HOME%'
//                         bat 'setx JAVA_HOME "%JDK_HOME%"'
//                         bat 'setx PATH "%PATH%;%JDK_HOME%/bin"'
//                     }
//                 }

//         stage('Install Playwright') {
//               steps {
//                  sh 'npm install --global playwright'
//               }
//         }
        stage('Clean') {
            steps {
                // Шаг запуска тестов
                sh 'mvn clean'
//              bat 'mvn clean test -Dsurefire -Dmaven.compiler.source=17'
            }
        }
        stage('Compile') {
             steps {
                        // Шаг запуска тестов
                 sh 'mvn compile'
             }
        }
        stage('Test') {
             steps {
                                // Шаг запуска тестов
                 sh 'mvn test'
             }
        }
    }
}
